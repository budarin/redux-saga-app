worker_processes        5;  ## Default: 1
error_log               logs/error.log;
pid                     logs/nginx.pid;
worker_rlimit_nofile    8192;

events {
  worker_connections  4096;  ## Default: 1024
}

http {

    upstream kometa {
        server  127.0.0.1:3000;
    }
    upstream kometa_api {
            server  127.0.0.1:5000;
        }
    charset utf-8;
    include mime.types;

    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name budarin-vv.ru;

        # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
        ssl_certificate "c:\certs\1_budarin-vv.ru_bundle.crt";
        ssl_certificate_key "c:\certs\budarin-vv.key";
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;

        # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
        ssl_dhparam "c:\certs\dhparam.pem";

        # intermediate configuration. tweak to your needs.
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
        ssl_prefer_server_ciphers on;

        # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
        add_header Strict-Transport-Security "max-age=10886400; includeSubDomains; preload" always;

        # OCSP Stapling ---
        # fetch OCSP records from URL in ssl_certificate and cache them
        ssl_stapling on;
        ssl_stapling_verify on;

        ## verify chain of trust of OCSP response using Root CA and Intermediate certs
        ssl_trusted_certificate "c:\certs\1_Intermediate.crt";

        resolver 77.88.8.1;

        index /;

        add_header 		X-Content-Type-Options nosniff;
        add_header 		X-Frame-Options DENY;
        add_header 		X-XSS-Protection "1; mode=block";
        add_header      Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; img-src 'self' data:; style-src 'self' 'unsafe-inline'; font-src 'self'; frame-src 'none'; object-src 'none'";

        gzip on;
        gzip_static on;
        gzip_comp_level 5;
        gzip_vary on;
        gzip_min_length 14336;
        gzip_proxied any;
        gzip_types text/plain text/css application/json application/x-javascript application/javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_buffers 16 8k;


        # sw.js нельзя кэшировать
        location = /sw.js  {
            root "D:/Projects/app1/dist/client";
            access_log	off;
        }

        location ~* \.(png|ico|gif|jpg|jpeg)$  {
            root "D:/Projects/app1/dist/client";
            #expires	max;
            access_log	off;
            add_header 	Cache-Control public,max-age=315360000;
        }

        location ~* \.(js|svg|json)$  {
            root "D:/Projects/app1/dist/client";
            #expires	max;
            access_log	off;
            add_header 	Cache-Control public,max-age=315360000;
        }


        location / {
            internal;

            expires		3;
            proxy_redirect 		off;
            proxy_http_version 	1.1;

            proxy_set_header 	Upgrade $http_upgrade;
            proxy_set_header 	Connection 'upgrade';
            proxy_cache_bypass 	$http_upgrade;

            proxy_set_header 	X-Real-IP $remote_addr;
            proxy_set_header 	X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header 	Host $http_host;
            proxy_set_header 	X-NginX-Proxy true;
            proxy_pass 		    http://kometa;

            proxy_next_upstream 	error timeout http_500 http_502 http_503 http_504;

            #для того чтобы Node.js мог отдавать кэшированные заголовки
            proxy_ignore_headers "Cache-Control" "Expires" "X-Accel-Expires" "Set-Cookie";
        }


        location /api/ {
            internal;

            proxy_redirect 		off;
            proxy_http_version 	1.1;

            proxy_set_header 	Upgrade $http_upgrade;
            proxy_set_header 	Connection 'upgrade';
            proxy_cache_bypass 	$http_upgrade;

            proxy_set_header 	X-Real-IP $remote_addr;
            proxy_set_header 	X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header 	Host $http_host;
            proxy_set_header 	X-NginX-Proxy true;
            proxy_pass 		    http://kometa_api;

            proxy_next_upstream 	error timeout http_500 http_502 http_503 http_504;

            #для того чтобы Node.js мог отдавать кэшированные заголовки
            proxy_ignore_headers "Cache-Control" "Expires" "X-Accel-Expires" "Set-Cookie";
        }

    }

}